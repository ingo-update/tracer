### Generic Makefile for C projects ###

ifdef SPEC
  include $(SPEC)
else
  include make/spec.gmk
endif

### Directories

TOPDIR = $(shell pwd)
SRC = $(TOPDIR)/src

# All build artifacts and temporaries go into $(BUILDDIR)
BUILDDIR = $(TOPDIR)/build
TOOLSDIR = $(BUILDDIR)/tools
GENSRC = $(BUILDDIR)/gensrc
OBJDIR = $(BUILDDIR)/objs

### File lists

SRCFILES = $(TOPDIR)/Makefile $(wildcard $(TOPDIR)/make/*.gmk $(SRC)/*.h $(SRC)/*.c)
OBJFILES = $(sort $(patsubst $(SRC)/%.c,$(OBJDIR)/%.o,$(wildcard $(SRC)/*.c)) $(EXTRA_OBJS))

### Generic build commands for use in rules

COMPILE_CMD = $(CC) -I$(SRC) -I$(GENSRC) $(CFLAGS) $(OPT_CFLAGS) $(DBG_CFLAGS) $(CFLAGS_$(notdir $<)) $< -o $@
LINK_CMD = $(LD) -o $@ $(LDFLAGS) $^ $(LDLIBS)
LEX_CMD = $(LEX) -t $< > $@
YACC_CMD = $(YACC) -d -o $(PARSER) $<

PARSER_H = $(patsubst %.c,%.h,$(PARSER))

### Targets

## Default target(s)

default: $(TARGET)

$(TARGET): $(addprefix $(BUILDDIR)/,$(TARGET))
	@$(CP) $^ $(TOPDIR)

## Generated source

# A tokeniser built with $(LEX)
$(LEXER):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Generating $(notdir $@)
	@$(ECHO) '$(LEX_CMD)' > $@.cmdline
	@$(LEX_CMD) 2> $@.log
	@[ -s $@.log ] || $(RM) $@.log

# A syntax analyser built with $(YACC)
$(PARSER) $(PARSER_H):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Generating $(notdir $(PARSER)), $(notdir $(PARSER_H))
	@$(ECHO) '$(YACC_CMD)' > $@.cmdline
	@$(YACC_CMD) 2> $@.log
	@[ -s $@.log ] || $(RM) $@.log

## Compilation and linking

# Compile C source into object files
$(OBJFILES):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Compiling $(notdir $<)
	@$(ECHO) '$(COMPILE_CMD)' > $@.cmdline
	@-$(COMPILE_CMD) 2> $@.log
	@[ -s $@.log ] || $(RM) $@.log
	@$(CAT) 2> /dev/null $@.log || true
	@[ ! -e $@.log ]

# Link object files into the target executable(s)
$(addprefix $(BUILDDIR)/,$(TARGET)):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Linking $(notdir $@)
	@$(ECHO) '$(LINK_CMD)' > $@.cmdline
	@$(LINK_CMD) 2> $@.log
	@[ -s $@.log ] || $(RM) $@.log

## Housekeeping

# Remove all build artifacts
clean:
	@$(RM) $(BUILDDIR) $(TARGET)

# Also remove editor backup files
sweep: clean
	@$(RM) *~ $(SRC)/*~ $(TOPDIR)/test/*~ $(TOPDIR)/make/*~ $(TOPDIR)/examples/*~

# Print source
paper: $(SRCFILES)
	@$(PRINT) $(sort $^)
